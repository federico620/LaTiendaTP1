@model LaTienda.VentaFromViewModel


@{
    ViewBag.Title = "Realizar Venta";
    var searchString = Model.ProductoViewModel?.Codigo.ToString() ?? "";
    var searchCliente = Model.ClienteViewModel?.Documento.ToString() ?? "";
}

<h2>Realizar Venta</h2>

<div>
    <div>

        @using (Html.BeginForm("BuscarProducto", "RealizarVenta", FormMethod.Get))
        {
            @Html.Hidden("venta_id", Model.Id)
            <p>
                Código del Producto: @Html.TextBox("SearchString", searchString)
                <input type="submit" value="Buscar" />
            </p>
        }
        <br />
        <p>
            @Html.Label("Descripcion: ")
            @Html.DisplayFor(model => model.ProductoViewModel.Descripcion)
        </p>
        <div class="row">
            <div class="col-lg-6">
                <p>
                    @Html.Label("Marca:  ")
                    @Html.DisplayFor(model => model.ProductoViewModel.MarcaViewModel.Descripcion)
                </p>
            </div>
            <div class="col-lg-6">
                <p>
                    @Html.Label("Rubro:  ")
                    @Html.DisplayFor(model => model.ProductoViewModel.RubroViewModel.Descripcion)
                </p>
            </div>
            <br><br><br>
            @if (Model.ProductoViewModel != null)
            {
                using (Html.BeginForm("BuscarStock", "RealizarVenta", FormMethod.Get))
                {
                    @Html.Hidden("venta_id", Model.Id)
                    @Html.Hidden("producto_id", Model.ProductoViewModel.Id)
                    <div class="col-lg-4">
                        @Html.Label("Color")
                        @Html.DropDownList("Color_Id", new SelectList(ViewBag.Color_Id, "Id", "Descripcion"), htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="col-lg-4">
                        @Html.Label("Talle")
                        @Html.DropDownList("Talle_Id", new SelectList(ViewBag.Talle_Id, "Id", "Descripcion"), htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="col-lg-4" style="padding-top: 2rem;">
                        <p>
                            <input type="submit" value="Buscar" />
                        </p>
                    </div>
                }
            }

            <div class="col-lg-6" style="padding:3rem;">
                @Html.Label("Stock: ")
                @Html.DisplayFor(model => model.StockViewModel.Cantidad)
            </div>
            <div class="col-lg-6" style="padding:3rem;">
                @Html.Label("Precio: ")
                @Html.DisplayFor(model => model.ProductoViewModel.PrecioDeVenta)
            </div>

            <div class="col-lg-12">
                @if (Model.StockViewModel != null)
                {
                    using (Html.BeginForm("AgregarProducto", "RealizarVenta", FormMethod.Get))
                    {
                        @Html.Hidden("venta_id", Model.Id)
                        @Html.Hidden("producto_id", Model.ProductoViewModel.Id)
                        @Html.Hidden("stock_id", Model.StockViewModel.Id)
                        @Html.Label("Cantidad")
                        <input id="cantidad" name="cantidad" type="number" min="1" max="@Model.StockViewModel.Cantidad" value="" />
                        <input type="submit" value="Agregar" />
                    }
                }
            </div>


            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductoViewModel.Descripcion)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.LineaDeVentaViewModels.First().Cantidad)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.LineaDeVentaViewModels.First().PrecioDeVenta)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.StockViewModel.ColorViewModel.Descripcion)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.StockViewModel.TalleViewModel.Descripcion)
                    </th>

                </tr>

                @foreach (var item in Model.LineaDeVentaViewModels)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.StockViewModel.ProductoViewModel.Descripcion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cantidad)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PrecioDeVenta)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StockViewModel.ColorViewModel.Descripcion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StockViewModel.TalleViewModel.Descripcion)
                        </td>

                    </tr>
                }
            </table>
            <br />
            <div>
                @Html.Label("Total: ")
                @Html.DisplayFor(model => model.Total)
            </div>
        </div>
        <br />
        <h4>Cliente</h4>
        <div class="row">
            <div class="col-lg-6">
                @using (Html.BeginForm("BuscarCliente", "RealizarVenta", FormMethod.Get))
                {

                    @Html.Hidden("venta_id", Model.Id)

                    <p>
                        Documento: @Html.TextBox("SearchCliente", searchCliente)
                        <input type="submit" value="Buscar" />
                    </p>
                }
                <div>
                    @using (Html.BeginForm("AgregarCliente", "RealizarVenta", FormMethod.Get))
                    {

                        @Html.Hidden("venta_id", Model.Id)

                        @Html.Hidden("cliente_id", Model.ClienteViewModel?.Id ?? null)

                        <p>
                            <input type="submit" value="Agregar Cliente" />
                        </p>
                    }
                </div>
            </div>
            <div class="col-lg-6">
                @Html.Label("Nombre: ")
                @Html.DisplayFor(model => model.ClienteViewModel.Nombre)
                <br />
                @Html.Label("Domicilio: ")
                @Html.DisplayFor(model => model.ClienteViewModel.Domicilio)
                <br />
                @if (Model.ClienteViewModel != null)
                {
                    @Html.Label("Condicion Tributaria: ")
                    @Html.DisplayFor(model => model.ClienteViewModel.CondicionTributaria.Condicion)
                    <br />
                }
                else
                {
                    @Html.Label("Condicion Tributaria: ")
                    @Html.Raw(LaTienda.Enums.CondicionTributariaEnum.CF + "")
                    <br />
                }
            </div>
        </div>
        <br /><br />
        <div>
            @using (Html.BeginForm("FinalizarVenta", "RealizarVenta", FormMethod.Get))
            {

                @Html.Hidden("venta_id", Model.Id)

                <p>
                    <input type="submit" value="Finalizar Venta" />
                </p>
            }
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
